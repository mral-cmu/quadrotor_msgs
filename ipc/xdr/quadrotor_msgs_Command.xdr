%{
#include <cstring>
#include <ipc_bridge/msgs/rosgraph_msgs_Header.h>
#include <ipc_bridge/msgs/geometry_msgs_Vector3.h>
#include <ipc_bridge/msgs/geometry_msgs_Quaternion.h>
%}

ipc_type rosgraph_msgs_Header;
ipc_type geometry_msgs_Vector3;
ipc_type geometry_msgs_Quaternion;

struct quadrotor_msgs_Command
{
 rosgraph_msgs_Header header;
 geometry_msgs_Vector3 force;
 geometry_msgs_Quaternion rotation;
 float kR[3];
 float kOm[3];
 float corrections[3];

%{
  quadrotor_msgs_Command()
  {
    memset(kR, 0, sizeof(kR));
    memset(kOm, 0, sizeof(kOm));
    memset(corrections, 0, sizeof(corrections));
  }
  quadrotor_msgs_Command(const quadrotor_msgs_Command& msg)
  {
    header = msg.header;
    force = msg.force;
    rotation = msg.rotation;
    memcpy(kR, msg.kR, sizeof(kR));
    memcpy(kOm, msg.kOm, sizeof(kOm));
    memcpy(corrections, msg.corrections, sizeof(corrections));
  }
  ~quadrotor_msgs_Command()
  {
  }
  quadrotor_msgs_Command& operator= (const quadrotor_msgs_Command& msg)
  {
    header = msg.header;
    force = msg.force;
    rotation = msg.rotation;
    memcpy(kR, msg.kR, sizeof(kR));
    memcpy(kOm, msg.kOm, sizeof(kOm));
    memcpy(corrections, msg.corrections, sizeof(corrections));

    return *this;
  }
%}

};

%{
namespace ipc_bridge
{
    namespace quadrotor_msgs
    {
        typedef quadrotor_msgs_Command Command;
    }
}
%}
