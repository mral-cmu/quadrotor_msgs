%{
#include <cstring>
#include <ipc_bridge/msgs/std_msgs_Header.h>
#include <ipc_bridge/msgs/geometry_msgs_Vector3.h>
#include <ipc_bridge/msgs/geometry_msgs_Quaternion.h>
%}

ipc_type std_msgs_Header;
ipc_type geometry_msgs_Vector3;
ipc_type geometry_msgs_Quaternion;

struct quadrotor_msgs_SO3Command
{
 std_msgs_Header header;
 geometry_msgs_Vector3 force;
 geometry_msgs_Quaternion rotation;
 geometry_msgs_Vector3 kR;
 geometry_msgs_Vector3 kOm;

%{
  quadrotor_msgs_SO3Command()
  {
  }
  quadrotor_msgs_SO3Command(const quadrotor_msgs_SO3Command& msg)
  {
    header = msg.header;
    force = msg.force;
    rotation = msg.rotation;
    kR = msg.kR;
    kOm = msg.kOm;
  }
  ~quadrotor_msgs_SO3Command()
  {
  }
  quadrotor_msgs_SO3Command& operator= (const quadrotor_msgs_SO3Command& msg)
  {
    header = msg.header;
    force = msg.force;
    rotation = msg.rotation;
    kR = msg.kR;
    kOm = msg.kOm;

    return *this;
  }
%}

};

%{
namespace ipc_bridge
{
    namespace quadrotor_msgs
    {
        typedef quadrotor_msgs_SO3Command SO3Command;
    }
}
%}
